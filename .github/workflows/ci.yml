# ci.yml v0.2.2 (2025-08-20)
name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Lint
        run: python -m compileall .

  security:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Bandit security scan
        run: bandit -r .
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install UI dependencies
        working-directory: ui
        run: npm install
      - name: npm audit
        working-directory: ui
        run: npm audit --audit-level=moderate

  test:
    runs-on: ubuntu-latest
    needs: security
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run tests
        run: pytest

  e2e:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      - name: Install dependencies
        run: npm install
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Run e2e tests
        run: npm run test:e2e

  performance:
    runs-on: ubuntu-latest
    needs: e2e
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: Run performance tests
        run: ./tests/perf/run_perf.sh
      - name: Upload performance reports
        uses: actions/upload-artifact@v4
        with:
          name: perf-reports
          path: perf/reports

  build:
    runs-on: ubuntu-latest
    needs: performance
    strategy:
      matrix:
        service: [api-gateway, orchestrator, data-ingestion, strategy-engine, risk-engine, execution-engine, backtester, ui]
    steps:
      - uses: actions/checkout@v4
      - name: Build service image
        run: |
          if [ -f "${{ matrix.service }}/Dockerfile" ]; then
            docker build -t ${{ matrix.service }} ${{ matrix.service }}
          else
            echo "No Dockerfile for ${{ matrix.service }}, skipping."
          fi

